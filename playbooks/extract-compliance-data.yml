---
- name: OCP Block
  hosts: all
  gather_facts: false
  vars:
    ocp_session: &ocp_session_definition
      host: "{{ openshift_fqdn }}"
      api_key:
      validate_certs: false
  tasks:
    - name: OCP Block
      block:
        - name: Login to OpenShift
          delegate_to: localhost
          redhat.openshift.openshift_auth:
            host: "{{ openshift_fqdn }}"
            username: "{{ openshift_user }}"
            password: "{{ openshift_password }}"
            validate_certs: false
          register: openshift_auth_results

        - set_fact:
            ocp_session:
              api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"

        - name: Login for oc command
          delegate_to: localhost
          shell: "oc login --server={{ openshift_fqdn }} --token={{ ocp_session.api_key }} --insecure-skip-tls-verify"

        - name: Create pv-extract pod
          delegate_to: localhost
          redhat.openshift.k8s:
            <<: *ocp_session_definition
            state: present
            wait: true
            src: ../openshift/pv-extract-pod.yaml

        - name: Wait until pv-extract pod is Running
          delegate_to: localhost
          shell: oc get pod pv-extract -n openshift-compliance -o jsonpath='{.status.phase}'
          register: pod_state
          until: pod_state.stdout == "Running"
          delay: 5
          retries: 10

        - name: Copy scan results from PVs
          delegate_to: localhost
          shell: |
            oc cp pv-extract:/ocp4-cis -n openshift-compliance cluster
            oc cp pv-extract:/ocp4-cis-node-master -n openshift-compliance master
            oc cp pv-extract:/ocp4-cis-node-worker -n openshift-compliance worker
    
        - name: Unzip all bzip2 files into xml files and put them in the parent directory, i.e. cluster/*.xml, master/*.xml, worker/*.xml
          delegate_to: localhost
          script: ../shell/unbzip2-all.sh
          register: shellstdout

        - name: Debug 1
          shell: ls -l
          register: resultDir

        - debug: msg={{ resultDir.stdout_lines }}

        - name: Process ARF XML into CSV
          script: arf2csv.py
          
        - name: Delete pv-extract pod
          delegate_to: localhost
          redhat.openshift.k8s:
            <<: *ocp_session_definition
            state: absent
            kind: Pod
            namespace: openshift-compliance
            name: pv-extract
            wait: true
            
      always:
        - name: If login succeeded, try to log out (revoke access token)
          delegate_to: localhost
          when: ocp_session.api_key is defined
          redhat.openshift.openshift_auth:
            <<: *ocp_session_definition
            state: absent
          ignore_errors: true
